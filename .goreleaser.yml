# This is an example goreleaser.yaml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
before:
  hooks:
    # you may remove this if you don't use vgo
    - go mod tidy
    # you may remove this if you don't need go generate
    #- go generate ./...
builds:
  -
    main: .
    env:
      - CGO_ENABLED=0
archives:
- replacements:
    darwin: Darwin
    linux: Linux
    windows: Windows
    386: i386
    amd64: x86_64
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
brews:
  -
    # Name template of the recipe
    # Default to project name
    name: lgen

    # Github repository to push the tap to.
    github:
      owner: budougumi0617
      name: homebrew-tap

    # Template for the url which is determined by the given Token (github or gitlab)
    # Default for github is "https://github.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    # Default for gitlab is "https://gitlab.com/<repo_owner>/<repo_name>/uploads/{{ .ArtifactUploadHash }}/{{ .ArtifactName }}"
    url_template: "https://github.com/budougumi0617/lgen/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    # Git author used to commit to the repository.
    # Defaults are shown.
    commit_author:
      name: goreleaserbot
      email: goreleaser@carlosbecker.com

    # Your app's homepage.
    # Default is empty.
    homepage: "https://budougumi0617.github.io/"

    # Your app's description.
    # Default is empty.
    description: "lgen generates boilerplates for layered architecture"

    # So you can `brew test` your formula.
    # Default is empty.
    test: |
      system "#{bin}/lgen --version"

    # Custom install script for brew.
    # Default is 'bin.install "program"'.
    install: |
      bin.install "lgen"
